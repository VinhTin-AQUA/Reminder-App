<UserControl x:Class="ReminderApp.MVVM.Views.ReminderDetailsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ReminderApp.MVVM.Views"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:viewModel="clr-namespace:ReminderApp.MVVM.ViewModels"
             
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter"/>

        <Style x:Key="ComboBoxTest2" TargetType="{x:Type ComboBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Grid.Column="2" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" >
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="5*" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border"  Grid.ColumnSpan="2" CornerRadius="2" Background="Beige" BorderBrush="Black" BorderThickness="1" />
                                            <Border Grid.Column="0" CornerRadius="2,0,0,2"  Margin="1"  Background="AliceBlue"  BorderBrush="Black" BorderThickness="0,0,1,0" />
                                            <Path x:Name="Arrow" Grid.Column="1"  Fill="Orange" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="Green" />
                                            </Trigger>
                                            <Trigger Property="ToggleButton.IsChecked" Value="true">
                                                <Setter TargetName="Border" Property="Background" Value="Green" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>

                            <ContentPresenter Name="ContentSite" 
                                          IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                          Margin="3"  />

                            <TextBox x:Name="PART_EditableTextBox" 
                                 Visibility="Hidden" 
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <Popup Name="Popup" 
                               Placement="Bottom" 
                               IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True"  
                               Focusable="False" 
                               PopupAnimation="Slide">
                                <Grid  Name="DropDown" SnapsToDevicePixels="True" 
                                   MinWidth="{TemplateBinding ActualWidth}" 
                                   MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="#fef9c3" />
                                    <ScrollViewer SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <Style x:Key="checkBox" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Border x:Name="comBoxBorder"
                            Width="20" Height="20"
                            BorderThickness="1"
                            BorderBrush="#fbbf24" Background="#ffff">
                            <Grid x:Name="comboBoxGrid">

                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="BorderThickness" TargetName="comBoxBorder" Value="0"></Setter>
                                <Setter Property="Background" TargetName="comboBoxGrid" Value="#65a30d"></Setter>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderThickness" TargetName="comBoxBorder" Value="0"></Setter>
                                <Setter Property="Background" TargetName="comboBoxGrid" Value="#fef9c3"></Setter>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="timeHeader" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#ffffff"></Setter>
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
        </Style>

        <Style x:Key="timeValue" TargetType="TextBox">
            <Setter Property="FontSize" Value="15"></Setter>
            <Setter Property="Width" Value="40"></Setter>
            <Setter Property="Padding" Value="2"></Setter>
        </Style>

        <Style x:Key="icon" TargetType="{x:Type fa:IconImage}">
            <Setter Property="Foreground" Value="Wheat"></Setter>
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Margin" Value="6,0,0,0"></Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#1d4ed8"></Setter>
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Background="#fff">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
             BorderBrush="#65a30d"
             BorderThickness="0,0,2,0"
             Background="#65a30d">
            <StackPanel Orientation="Horizontal"
                     VerticalAlignment="Center"
                     Margin="10,0,0,0">

                <Button Command="{Binding NavigateHomeViewCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Grid>
                                <fa:IconImage Style="{StaticResource icon}"
                                           ToolTip="Back"
                               Icon="CaretLeft"></fa:IconImage>
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

                <ComboBox x:Name="daysOfWeek" Margin="10,0,10,0"
                           ItemsSource="{Binding DayRepeats}" 
                           Width="200"
                           SelectedIndex="0"
                           Style="{StaticResource ComboBoxTest2}">

                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal"
                                    VerticalAlignment="Center">
                                <CheckBox Margin="0,0,5,0"
                                           Tag="{Binding}"
                                          IsChecked="{Binding IsChecked}"
                                           Command="{Binding DataContext.UpdateDayOfWeekCommand, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                           CommandParameter="{Binding}"
                                           Style="{StaticResource checkBox}">   

                                </CheckBox>
                                <TextBlock Text="{Binding Day}"
                             FontSize="15"></TextBlock>
                            </StackPanel>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>

                <StackPanel Orientation="Horizontal"
                             VerticalAlignment="Center"
                             Margin="0,0,5,0">

                    <TextBlock Text="Duration: "
                                Foreground="#ffffff"
                                FontSize="15"></TextBlock>

                    <TextBlock Text="Hours"
                                Style="{StaticResource timeHeader}"></TextBlock>

                    <TextBox x:Name="hourInput" 
                              Text="{Binding Hours, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                              Style="{StaticResource timeValue}"
              ></TextBox>

                    <TextBlock Text="Minutes"
                                Style="{StaticResource timeHeader}"></TextBlock>

                    <TextBox x:Name="minuteInput"
                              Text="{Binding Minutes, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                              Style="{StaticResource timeValue}"
              ></TextBox>

                    <TextBlock Text="Seconds"
                                Style="{StaticResource timeHeader}"></TextBlock>

                    <TextBox x:Name="secondInput" 
                              Text="{Binding Seconds, UpdateSourceTrigger=PropertyChanged, NotifyOnSourceUpdated=True}"
                              Style="{StaticResource timeValue}"
              ></TextBox>

                </StackPanel>

                <Button Command="{Binding UpdateReminderCommand}">
                    <Button.Template>
                        <ControlTemplate>
                            <Border CornerRadius="2">
                                <Grid>
                                    <fa:IconImage Style="{StaticResource icon}" 
                                               ToolTip="Save"
                                     Icon="Save" IconFont="Solid"></fa:IconImage>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Button.Template>
                </Button>

            </StackPanel>
        </Border>

        <Border Grid.Row="1"
             Margin="5"
             CornerRadius="5"
             BorderThickness="2"
             BorderBrush="#65a30d">
            <TextBox Padding="10"
                  Margin="5"
                  Text="{Binding Content}"
                  TextWrapping="Wrap"
                  FontSize="20" BorderThickness="0"></TextBox>
        </Border>
    </Grid>
</UserControl>
